# =================================
# INVENTAIRE ANSIBLE - MICROSERVICES
# =================================

all:
  children:
    kubernetes:
      hosts:
        localhost:
          ansible_connection: local
          ansible_python_interpreter: "{{ ansible_playbook_python }}"
      vars:
        # Configuration Kubernetes
        kubectl_context: "arn:aws:eks:us-west-2:{{ aws_account_id }}:cluster/springboot-microservices-production-cluster"
        k8s_namespace: microservices
        
        # Configuration AWS
        aws_region: us-west-2
        aws_account_id: "{{ vault_aws_account_id }}"
        
        # Configuration des microservices
        project_name: springboot-microservices
        environment: production
        
        # Images Docker
        docker_registry: "{{ vault_docker_registry | default('haphong463') }}"
        image_tag: "{{ image_version | default('latest') }}"
        
        # Configuration réseau
        service_type: ClusterIP  # ou LoadBalancer pour exposition externe
        
        # Ressources par défaut
        default_resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"

    microservices:
      children:
        discovery:
          hosts:
            service-registry:
              service_name: service-registry
              port: 8761
              replicas: 2
              image: "{{ docker_registry }}/service-registry"
              resources:
                requests:
                  cpu: "200m"
                  memory: "512Mi"
                limits:
                  cpu: "500m"
                  memory: "1Gi"
              health_check:
                path: "/actuator/health"
                port: 8761
              environment:
                SPRING_PROFILES_ACTIVE: "prod"
                SERVER_PORT: "8761"
                
        gateway:
          hosts:
            api-gateway:
              service_name: api-gateway
              port: 8080
              replicas: 3
              image: "{{ docker_registry }}/api-gateway"
              resources:
                requests:
                  cpu: "300m"
                  memory: "768Mi"
                limits:
                  cpu: "1000m"
                  memory: "1.5Gi"
              health_check:
                path: "/actuator/health"
                port: 8080
              environment:
                SPRING_PROFILES_ACTIVE: "prod"
                SERVER_PORT: "8080"
                EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://service-registry:8761/eureka"
                
        business:
          hosts:
            order-service:
              service_name: order-service
              port: 8081
              replicas: 3
              image: "{{ docker_registry }}/order-service"
              resources:
                requests:
                  cpu: "400m"
                  memory: "1Gi"
                limits:
                  cpu: "1000m"
                  memory: "2Gi"
              health_check:
                path: "/actuator/health"
                port: 8081
              environment:
                SPRING_PROFILES_ACTIVE: "prod"
                SERVER_PORT: "8081"
                EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://service-registry:8761/eureka"
                DB_HOST: "{{ vault_order_db_host }}"
                DB_PORT: "3306"
                DB_NAME: "order_service_db"
                DB_USERNAME: "{{ vault_order_db_username }}"
                DB_PASSWORD: "{{ vault_order_db_password }}"
                KAFKA_BOOTSTRAP_SERVERS: "{{ vault_kafka_bootstrap_servers }}"
                REDIS_HOST: "{{ vault_redis_host }}"
                REDIS_PORT: "6379"
                
            payment-service:
              service_name: payment-service
              port: 8082
              replicas: 3
              image: "{{ docker_registry }}/payment-service"
              resources:
                requests:
                  cpu: "300m"
                  memory: "768Mi"
                limits:
                  cpu: "800m"
                  memory: "1.5Gi"
              health_check:
                path: "/actuator/health"
                port: 8082
              environment:
                SPRING_PROFILES_ACTIVE: "prod"
                SERVER_PORT: "8082"
                EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://service-registry:8761/eureka"
                DB_HOST: "{{ vault_payment_db_host }}"
                DB_PORT: "3306"
                DB_NAME: "payment_service_db"
                DB_USERNAME: "{{ vault_payment_db_username }}"
                DB_PASSWORD: "{{ vault_payment_db_password }}"
                KAFKA_BOOTSTRAP_SERVERS: "{{ vault_kafka_bootstrap_servers }}"
                
            product-service:
              service_name: product-service
              port: 8083
              replicas: 3
              image: "{{ docker_registry }}/product-service"
              resources:
                requests:
                  cpu: "400m"
                  memory: "1Gi"
                limits:
                  cpu: "1000m"
                  memory: "2Gi"
              health_check:
                path: "/actuator/health"
                port: 8083
              environment:
                SPRING_PROFILES_ACTIVE: "prod"
                SERVER_PORT: "8083"
                EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://service-registry:8761/eureka"
                DB_HOST: "{{ vault_product_db_host }}"
                DB_PORT: "3306"
                DB_NAME: "product_service_db"
                DB_USERNAME: "{{ vault_product_db_username }}"
                DB_PASSWORD: "{{ vault_product_db_password }}"
                KAFKA_BOOTSTRAP_SERVERS: "{{ vault_kafka_bootstrap_servers }}"
                REDIS_HOST: "{{ vault_redis_host }}"
                REDIS_PORT: "6379"
                
            identity-service:
              service_name: identity-service
              port: 8085
              replicas: 3
              image: "{{ docker_registry }}/identity-service"
              resources:
                requests:
                  cpu: "300m"
                  memory: "768Mi"
                limits:
                  cpu: "800m"
                  memory: "1.5Gi"
              health_check:
                path: "/actuator/health"
                port: 8085
              environment:
                SPRING_PROFILES_ACTIVE: "prod"
                SERVER_PORT: "8085"
                EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://service-registry:8761/eureka"
                DB_HOST: "{{ vault_identity_db_host }}"
                DB_PORT: "3306"
                DB_NAME: "identity_service_db"
                DB_USERNAME: "{{ vault_identity_db_username }}"
                DB_PASSWORD: "{{ vault_identity_db_password }}"
                KAFKA_BOOTSTRAP_SERVERS: "{{ vault_kafka_bootstrap_servers }}"
                
        support:
          hosts:
            email-service:
              service_name: email-service
              port: 8084
              replicas: 2
              image: "{{ docker_registry }}/email-service"
              resources:
                requests:
                  cpu: "200m"
                  memory: "512Mi"
                limits:
                  cpu: "500m"
                  memory: "1Gi"
              health_check:
                path: "/actuator/health"
                port: 8084
              environment:
                SPRING_PROFILES_ACTIVE: "prod"
                SERVER_PORT: "8084"
                EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://service-registry:8761/eureka"
                KAFKA_BOOTSTRAP_SERVERS: "{{ vault_kafka_bootstrap_servers }}"

        frontend:
          hosts:
            frontend-app:
              service_name: frontend-app
              port: 80
              replicas: 2
              image: "{{ docker_registry }}/frontend-app"
              service_type: LoadBalancer  # Exposer via ALB
              resources:
                requests:
                  cpu: "100m"
                  memory: "256Mi"
                limits:
                  cpu: "300m"
                  memory: "512Mi"
              health_check:
                path: "/health"
                port: 80
              environment:
                REACT_APP_API_URL: "http://{{ api_gateway_url | default('api-gateway:8080') }}"
                REACT_APP_ENVIRONMENT: "{{ deployment_environment }}"
