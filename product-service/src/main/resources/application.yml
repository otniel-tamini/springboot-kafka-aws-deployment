spring:
  application:
    name: product-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  kafka:
    producer:
      bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: product
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    topic:
      name: product_topics
    create-order-topic:
      name: create_order_topic
  zipkin:
    base-url: ${ZIPKIN_BASE_URL:http://127.0.0.1:9411/}
  sleuth:
    sampler:
      probability: ${TRACING_SAMPLING_PROBABILITY:1}
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    timeout: ${SPRING_REDIS_TIMEOUT:60000}
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 15MB
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/product_db}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update

server:
  port: ${PRODUCT_SERVICE_PORT:8084}

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: ${TRACING_SAMPLING_PROBABILITY:1}
